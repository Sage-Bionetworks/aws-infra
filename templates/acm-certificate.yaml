# Setting up a certificate requires a manual step to enter the DNS Validation on godaddy.
Description: Setup an ACM Certificate
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CostCenter:
    Type: String
    Description: 'Cost Center for this resource'
    Default: ''
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
    Default: 'it@sagebase.org'
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname
  DnsDomainName:
    Description: Domain to secure with the certificate (i.e. sagebionetworks.org)
    Type: String
  DnsSubDomainName:
    Description: Sub domain (default is '*') to secure with certificate (i.e. "cancer" of cancer.sagebionetworks.org)
    Type: String
    Default: "*"
Conditions:
  HasCostCenter: !Not [!Equals ['', !Ref CostCenter]]
Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Join
        - '.'
        - - !Ref DnsSubDomainName
          - !Ref DnsDomainName
      DomainValidationOptions:
        - DomainName: !Join
            - '.'
            - - !Ref DnsSubDomainName
              - !Ref DnsDomainName
          ValidationDomain: !Ref DnsDomainName
      ValidationMethod: "DNS"
      Tags:
        -
          Key: "Name"
          Value: !Ref AWS::StackName
        -
          Key: "OwnerEmail"
          Value: !Ref OwnerEmail
        -
          Key: "CostCenter"
          Value: !If [HasCostCenter, !Ref CostCenter, !Ref "AWS::NoValue"]
Outputs:
  CertificateArn:
    Value: !Ref Certificate
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CertificateArn'
