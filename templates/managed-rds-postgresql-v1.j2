AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Provision RDS PostgreSQL instance
Parameters:
  VpcSubnet:
    Type: List<AWS::EC2::Subnet::Id>
    ConstraintDescription: must be an existing subnet
    Default: PrivateSubnet
    AllowedValues:
      - PrivateSubnet
      - PrivateSubnet1
      - PrivateSubnet2
      - PublicSubnet
      - PublicSubnet1
      - PublicSubnet2
  KmsKeyId:
    Description: The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to create the encrypted volume
    Type: String
    Default: ""
  DBPortNumber:
    Description: The port number on which the database accepts connections.
    Type: Number
    Default: '5432'
    MinValue: '1150'
    MaxValue: '65535'
    ConstraintDescription: Valid values range from 1150-65535
  DBMasterUsername:
    Description: The database admin account username
    Type: String
    MinLength: '5'
    MaxLength: '16'
    AllowedPattern: ^[\w]+$
    ConstraintDescription: Minimum 5 characters must begin with a letter and contain
      only alphanumeric and underscore characters.
  DBMasterUserPassword:
    Description: The password for the master user. The password can include any printable
      ASCII character except "/", "\"", or "@".
    NoEcho: true
    Type: String
    MinLength: '12'
    MaxLength: '41'
    AllowedPattern: ^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?\d)(?=.*?(_|\W))(?=.*?\s)?.{8,}$
    ConstraintDescription: 'Minimum 12 characters, at least one of each of the following:
      uppercase, lowercase, number, and symbol character such as !#$%^&*()<>[]{}|_+-=.'
  DBBackupRetentionPeriod:
    Description: The number of days for which automated backups are retained. Allowed
      values 0-10. Setting this parameter to a positive number enables backups. Setting
      this parameter to 0 disables automated backups.
    Default: '1'
    Type: Number
    MinValue: '0'
    MaxValue: '10'
    ConstraintDescription: must be a number between 0 and 10.
  VolumeSize:
    Default: '20'
    Description: General Purpose (SSD) storage (gp2). Must be an integer from 20 to
      16384.
    Type: Number
    MinValue: '20'
    MaxValue: '16384'
    ConstraintDescription: Must be an integer from 20 to 16384.
  EncryptVolume:
    Default: 'true'
    Description: Local encryption on the instance
    Type: Boolean
  DBEngineVersion:
    Description: The database engine version
    Type: String
    Default: '11.2'
    AllowedValues:
      - '11.5R1'
      - '11.2'
      - '11.1'
      - '10.7'
      - '10.6'
      - '10.5'
      - '10.4'
      - '10.3'
      - '10.1'
  InstanceType:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.xlarge
      - db.m5.24xlarge
      - db.m5.12xlarge
      - db.m5.4xlarge
      - db.m5.2xlarge
      - db.m5.xlarge
      - db.m5.large
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: must select a valid database instance type.
  MultiAZ:
    Description: Multi-AZ database
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: must be true or false.
Conditions:
  PublicDBResource: !Or [!Equals [ !Ref VpcSubnet, PublicSubnet ], !Equals [ !Ref VpcSubnet, PublicSubnet1 ], !Equals [ !Ref VpcSubnet, PublicSubnet2 ] ]
  PrivateDBResource: !Or [!Equals [ !Ref VpcSubnet, PrivateSubnet ], !Equals [ !Ref VpcSubnet, PrivateSubnet1 ], !Equals [ !Ref VpcSubnet, PrivateSubnet2 ] ]
  HasMksKeyId: !Not [!Equals ["", !Ref KmsKeyId]]
Resources:
  {% if sceptre_user_data.IngressWhitelist is defined %}
  DBInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: "Open database on defined port for access by whitelisted IP"
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      SecurityGroupIngress:
      {% for block in sceptre_user_data.IngressWhitelist %}
        - IpProtocol: tcp
          FromPort: !Ref 'DBPortNumber'
          ToPort: !Ref 'DBPortNumber'
          CidrIp: {{ block }}
      {% endfor %}
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
        FromPort: -1
        ToPort: -1
        IpProtocol: "-1"
      Tags:
        - Key: "Department"
          Value: !Ref Department
        - Key: "Project"
          Value: !Ref Project
        - Key: "OwnerEmail"
          Value: !Ref OwnerEmail
  {% endif %}
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          SetupCfn:
            - cfn_hup_service
          SetupVolume:
            - tag_volume
        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init.
        cfn_hup_service:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.DBInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource DBInstance --configsets SetupCfn,SetupVolume --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
        /lib/systemd/system/cfn-hup.service:
          content: !Sub |
            [Unit]
        Description=cfn-hup daemon

        [Service]
        Type=simple
        ExecStart=/opt/aws/bin/cfn-hup
        Restart=always

        [Install]
        WantedBy=multi-user.target
        mode: "000400"
        owner: root
        group: root
    commands:
      01_enable_cfn-hup:
        command: "/bin/systemctl enable cfn-hup.service"
      02_start_cfn-hup:
        command: "/bin/systemctl start cfn-hup.service"
        tag_volume:
      commands:
        01_tag_root_disk:
          command: !Join
            - ''
            - - "DB_INSTANCE_ID=$(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id) "
              - "ROOT_DISK_ID=$(/usr/bin/aws ec2 describe-volumes --region $AWS_REGION "
          - "--filters Name=attachment.instance-id,Values=$DB_INSTANCE_ID "
          - "--query Volumes[].VolumeId --out text); "
          - "/usr/bin/aws ec2 create-tags --region $AWS_REGION --resources $ROOT_DISK_ID "
          - "--tags Key=Name,Value=$DB_INSTANCE_ID-root Key=cloudformation:stack-name,Value=$STACK_NAME "
          - "Key=Department,Value=$DEPARTMENT Key=Project,Value=$PROJECT Key=OwnerEmail,Value=$OWNER_EMAIL"
          env:
            AWS_REGION: !Ref AWS::Region
            STACK_NAME: !Ref AWS::StackName
            DEPARTMENT: !Ref Department
            PROJECT: !Ref Project
            OWNER_EMAIL: !Ref OwnerEmail
    Properties:
      AllocatedStorage: !Ref 'VolumeSize'
      DBInstanceClass: !Ref 'InstanceType'
      KmsKeyId: !If [HasKmsKeyId, !Ref KmsKeyId, !Ref 'AWS::NoValue']
      StorageEncryption: !Ref 'EncryptVolume'
      Engine: postgres
      EngineVersion: !Ref 'DBEngineVersion'
      MasterUsername: !Ref 'DBMasterUsername'
      MasterUserPassword: !Ref 'DBMasterUserPassword'
      MultiAZ: !Ref 'MultiAZ'
      BackupRetentionPeriod: !Ref 'DBBackupRetentionPeriod'
      Tags:
        - Key: Name
          Value: PostgreSQL Master Database
      VPCSecurityGroups:
        - !GetAtt 'DBEC2SecurityGroup.GroupId'
    DeletionPolicy: Snapshot
    Tags:
      - Key: "Name"
        Value: !Ref 'AWS::StackName'
      - Key: "Department"
        Value: !Ref Department
      - Key: "Project"
        Value: Project
      - Key: "OwnerEmail"
        Value: !Ref OwnerEmail
Outputs:
  DBInstance:
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstance'
  DBInstancePublicIp:
    Condition: PublicDBResource
    Value: !GetAtt 'DBInstance.Endpoint.Address'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstancePublicIp'
  DBInstancePrivateIp:
    Condition: PrivateDBResource
    Value: !GetAtt 'DBInstance.Endpoint.Address'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstancePrivateIp'
  OwnerEmail:
    Value: !Ref OwnerEmail
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-OwnerEmail'
  DBInstanceJDBCConnectionString:
    Description: JDBC connection string for the master database
    Value: !Join
      - ''
      - - jdbc:postgresql://
        - !GetAtt 'DBInstance.Endpoint.Address'
        - ':'
        - !GetAtt 'DBInstance.Endpoint.Port'
        - '/postgres'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstanceJDBCConnectionString'
