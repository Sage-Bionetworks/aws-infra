AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Provision RDS PostgreSQL instance
Parameters:
  VpcSubnet:
    Type: List<AWS::EC2::Subnet::Id>
    ConstraintDescription: must be an existing subnet
    Default: PrivateSubnet
    AllowedValues:
      - PrivateSubnet
      - PrivateSubnet1
      - PrivateSubnet2
      - PublicSubnet
      - PublicSubnet1
      - PublicSubnet2
  KmsKeyId:
    Description: The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to create the encrypted volume
    Type: String
    Default: ""
  DBPortNumber:
    Description: The port number on which the database accepts connections.
    Type: Number
    Default: '5432'
    MinValue: '1150'
    MaxValue: '65535'
    ConstraintDescription: Valid values range from 1150-65535
  DBMasterUsername:
    Description: The database admin account username
    Type: String
    MinLength: '5'
    MaxLength: '16'
    AllowedPattern: ^[\w]+$
    ConstraintDescription: Minimum 5 characters must begin with a letter and contain
      only alphanumeric and underscore characters.
  DBMasterUserPassword:
    Description: The password for the master user. The password can include any printable
      ASCII character except "/", "\"", or "@".
    NoEcho: true
    Type: String
    MinLength: '12'
    MaxLength: '41'
    AllowedPattern: ^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?\d)(?=.*?(_|\W))(?=.*?\s)?.{8,}$
    ConstraintDescription: 'Minimum 12 characters, at least one of each of the following:
      uppercase, lowercase, number, and symbol character such as !#$%^&*()<>[]{}|_+-=.'
  DBBackupRetentionPeriod:
    Description: The number of days for which automated backups are retained. Allowed
      values 0-10. Setting this parameter to a positive number enables backups. Setting
      this parameter to 0 disables automated backups.
    Default: '1'
    Type: Number
    MinValue: '0'
    MaxValue: '10'
    ConstraintDescription: must be a number between 0 and 10.
  VolumeSize:
    Default: '20'
    Description: General Purpose (SSD) storage (gp2). Must be an integer from 20 to
      16384.
    Type: Number
    MinValue: '20'
    MaxValue: '16384'
    ConstraintDescription: Must be an integer from 20 to 16384.
  StorageType:
    Default: 'standard'
    Description: Type of storage on the instance, whether standard ssd or optimized
    Type: String
    AllowedValues:
      - standard
      - gp2
      - io1
  EncryptVolume:
    Default: 'true'
    Description: Local encryption on the instance
    Type: Boolean
  DBEngineVersion:
    Description: The database engine version
    Type: String
    Default: '11.2'
    AllowedValues:
      - '11.5R1'
      - '11.2'
      - '11.1'
  InstanceType:
    Description: The database instance type
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.m5.xlarge
      - db.m5.large
    ConstraintDescription: must select a valid database instance type.
  MultiAZ:
    Description: Multi-AZ database
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: must be true or false.
Conditions:
  HasMksKeyId: !Not [!Equals ["", !Ref KmsKeyId]]
Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Ref 'VpcName'
      DBSubnetGroupDescription: Subnet group name within accounts
      SubnetIds: !Ref 'VpcSubnet'
  {% if sceptre_user_data.IngressWhitelist is defined %}
  DBInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: "Open database on defined port for access by whitelisted IP"
      VpcId: !ImportValue 'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      SecurityGroupIngress:
      {% for CIDRBlock in sceptre_user_data.IngressWhitelist %}
        - IpProtocol: tcp
          FromPort: !Ref 'DBPortNumber'
          ToPort: !Ref 'DBPortNumber'
          CidrIp: {{ CIDRBlock }}
      {% endfor %}
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
        FromPort: -1
        ToPort: -1
        IpProtocol: "-1"
      Tags:
        - Key: "Department"
          Value: !Ref Department
        - Key: "Project"
          Value: !Ref Project
        - Key: "OwnerEmail"
          Value: !Ref OwnerEmail
  {% endif %}
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceClass: !Ref 'InstanceType'
      AllocatedStorage: !Ref 'VolumeSize'
      StorageType: !Ref 'StorageType'
      StorageEncrypted: !Ref 'EncryptVolume'
      CACertificateIdentifier: !Ref 'AcmCertificateArn'
      KmsKeyId: !If [HasKmsKeyId, !Ref KmsKeyId, !Ref 'AWS::NoValue']
      Engine: postgres
      EngineVersion: !Ref 'DBEngineVersion'
      MasterUsername: !Ref 'DBMasterUsername'
      MasterUserPassword: !Ref 'DBMasterUserPassword'
      MultiAZ: !Ref 'MultiAZ'
      BackupRetentionPeriod: !Ref 'DBBackupRetentionPeriod'
      VPCSecurityGroups:
        - !GetAtt 'DBInstanceSecurityGroup.GroupId'
      DeletionPolicy: Snapshot
      CreationPolicy:
        ResourceSignal:
          Timeout: PT10M
      Tags:
        - Key: "Name"
          Value: !Ref 'AWS::StackName'
        - Key: "Department"
          Value: !Ref Department
        - Key: "Project"
          Value: Project
        - Key: "OwnerEmail"
          Value: !Ref OwnerEmail
Outputs:
  DBInstance:
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstance'
  DBInstanceJDBCConnectionString: #TODO this should potential be the FQDN of the endpoint
    Description: JDBC connection string for the master database
    Value: !Join
      - ''
      - - jdbc:postgresql://
        - !GetAtt 'DBInstance.Endpoint.Address'
        - ':'
        - !GetAtt 'DBInstance.Endpoint.Port'
        - '/postgres'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBInstanceJDBCConnectionString'
