AWSTemplateFormatVersion: 2010-09-09
Transform: S3Objects
Description: Synapse External S3 Bucket
Parameters:
  AllowWriteBucket:
    Type: String
    Description: true for read-write, false (default) for read-only bucket
    AllowedValues:
      - true
      - false
    Default: true
  SameRegionResourceAccessToBucket:
    Type: String
    Description: >
      THIS CURRENTLY ONLY WORKS IN THE us-east-1 REGION!!!!!
      Data transfers within the same region between AWS resources are free.
      true to restrict downloading files from this bucket to only AWS resources (e.g. EC2 , Lambda) within the same region as this bucket.
      This will not allow even the owner of the bucket to download objects in this bucket when not using an AWS resource in the same region!
    AllowedValues:
      - true
      - false
    Default: false
  BucketVersioning:
    Type: String
    Description: Enabled to enable bucket versioning, default is Suspended
    AllowedValues:
      - Enabled
      - Suspended
    Default: Suspended
  GrantAccess:
    Type: CommaDelimitedList
    Default: "[]"
    Description: Grant bucket access to accounts, groups, and users.
    ConstraintDescription: List of ARNs (i.e. ["arn:aws:iam::011223344556:user/jsmith", "arn:aws:iam::544332211006:user/rjones"]
  EnableDataLifeCycle:
    Type: String
    Description: Enabled to enable bucket lifecycle rule, default is Disabled
    AllowedValues:
      - Enabled
      - Disabled
    Default: Disabled
  LifecycleDataTransition:
    Type: Number
    Description: Number of days until S3 objects are moved to LifecycleDataStorageClass
    Default: 30
    MaxValue: 360
    MinValue: 1
  LifecycleDataStorageClass:
    Type: String
    Description: S3 bucket objects will transition into this storage class
    AllowedValues:
      - DEEP_ARCHIVE
      - INTELLIGENT_TIERING
      - STANDARD_IA
      - ONEZONE_IA
      - GLACIER
    Default: GLACIER
  LifecycleDataExpiration:
    Type: Number
    Description: Number of days (from creation) when objects are deleted from S3 and the LifecycleDataStorageClass
    Default: 365000
    MaxValue: 365000
    MinValue: 360
  BucketName:
    Type: String
    Description: (Optional) Name of the created bucket.
    Default: ""
Conditions:
  AllowWrite: !Equals [!Ref AllowWriteBucket, true]
  AllowUserAccess: !Not [!Equals [!Join ['', !Ref GrantAccess], "[]"]]
  CreateIPAddressRestrictionLambda: !Equals [!Ref SameRegionResourceAccessToBucket, true]
  HasBucketName: !Not [!Equals [!Ref BucketName, ""]]
Resources:
  Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      VersioningConfiguration:
        Status: !Ref BucketVersioning
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - Id: SynapseCORSRule
            AllowedHeaders: ['*']
            AllowedOrigins: ['*']
            AllowedMethods: [GET, POST, PUT, HEAD]
            MaxAge: 3000
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      LifecycleConfiguration:
        Rules:
        - Id: DataLifecycleRule
          Status: !Ref EnableDataLifeCycle
          ExpirationInDays: !Ref LifecycleDataExpiration
          Transitions:
            - TransitionInDays: !Ref LifecycleDataTransition
              StorageClass: !Ref LifecycleDataStorageClass

  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Condition: AllowUserAccess
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: SynapseObjectAccess
            # If Synapse is a grantee, gives Synapse access to objects in the bucket (R/O or R/W, depending on AllowWrite)
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - !If [AllowWrite, "s3:*Object*", "s3:GetObject*"]
              - "s3:*MultipartUpload*"
            Condition:
              StringEquals:
                "aws:PrincipalAccount": "325565585839"
            Resource: !Sub "${Bucket.Arn}/*"
          - Sid: BucketAccess
            # gives grantees access to the bucket
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - "s3:ListBucket*"
              - "s3:GetBucketLocation"
            Resource: [ !GetAtt Bucket.Arn ]
          - Sid: ReadObjectAccess
            # give grantees read access to objects
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - "s3:GetObject"
              - "s3:GetObjectAcl"
              - "s3:AbortMultipartUpload"
              - "s3:ListMultipartUploadParts"
            Resource: [ !Sub "${Bucket.Arn}/*" ]
          - !If
            - AllowWrite
            - Sid: InternalPutObjectAccess
              # gives bucket-account grantees the ability to upload objects
              Effect: Allow
              Principal:
                AWS: !Ref GrantAccess
              Action:
                - "s3:PutObject"
                - "s3:PutObjectAcl"
              Resource: [ !Sub "${Bucket.Arn}/*" ]
              Condition:
                StringEquals:
                  "aws:PrincipalAccount": "055273631518"
            - !Ref AWS::NoValue
          - !If
            - AllowWrite
            - Sid: ExternalPutObjectAccess
              # gives cross-account grantees the ability to upload objects
              Effect: Allow
              Principal:
                AWS: !Ref GrantAccess
              Action:
                - "s3:PutObject"
                - "s3:PutObjectAcl"
              Resource: [ !Sub "${Bucket.Arn}/*" ]
              Condition:
                StringEquals:
                  s3:x-amz-acl: bucket-owner-full-control
            - !Ref AWS::NoValue

  # Add owner file to the synapse bucket, requires the cloudformation S3 objects macro
  # https://github.com/Sage-Bionetworks/aws-infra/tree/master/lambdas/cfn-s3objects-macro
  {% if sceptre_user_data.SynapseIDs is defined %}
  SynapseOwnerFile:
    Type: AWS::S3::Object
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3001
    Properties:
      Target:
        Bucket: [ !Ref Bucket ]
        Key: owner.txt
        ContentType: text
        ACL: authenticated-read
      Body: >-
        {% for SynapseID in sceptre_user_data.SynapseIDs %}
          {{ SynapseID }}
        {% endfor %}
  {% endif %}

  IPAddressRestictionLambda:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateIPAddressRestrictionLambda
    Properties:
      # lambda from https://github.com/Sage-Bionetworks-IT/cfn-cr-same-region-bucket-download
      TemplateURL: 'https://bootstrap-awss3cloudformationbucket-19qromfd235z9.s3.amazonaws.com/cfn-cr-same-region-bucket-download/1.0.0/cfn-cr-same-region-bucket-download.yaml'
      Parameters:
        BucketName: !Ref Bucket

Outputs:
  Bucket:
    Value: !Ref Bucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-Bucket'
  BucketArn:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketArn'
