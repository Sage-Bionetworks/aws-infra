AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cfn-ssm-param-macro

  Get a parameter from SSM

Parameters:
  Department:
    Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'Platform'
  Project:
    Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'Infrastructure'
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
    Default: 'it@sagebase.org'

Globals:
  Function:
    Timeout: 3

Resources:
  SsmParamFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ssm_param/
      Handler: app.handler
      Runtime: python3.6
      Role: !ImportValue us-east-1-bootstrap-SsmParamLambdaExecutionRoleArn
      Tags:
        Department: !Ref Department
        Project: !Ref Project
        OwnerEmail: !Ref OwnerEmail

  SsmParamMacro:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: SsmParam
      FunctionName: !GetAtt SsmParamFunction.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SsmParamFunction
      Principal: !Ref 'AWS::AccountId'
      SourceArn: !ImportValue us-east-1-bootstrap-CfServiceRoleArn
