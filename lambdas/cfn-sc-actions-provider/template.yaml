AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Service Catalog actions provider
Resources:
  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.6
      CodeUri: sc-actions-provider/
      Handler: app.lambda_handler
      Role: !GetAtt CreateFunctionRole.Arn
      Timeout: 30
  CreateFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref LogsPolicy
        - "arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess"
#        - !Ref ProviderPolicy
  LogsPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"

  ProviderPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "servicecatalog:*ServiceAction"
              - "servicecatalog:*ServiceAction*"
              - "ssm:DescribeDocument"
              - "ssm:GetAutomationExecution"
              - "ssm:StartAutomationExecution"
              - "ssm:StopAutomationExecution"
              - "cloudformation:ListStackResources"
              - "ec2:DescribeInstanceStatus"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
            Resource: "*"
#      Policies:
#        - PolicyName: ManageScActionsProvider
#          PolicyDocument:
#            Version: 2012-10-17
#            Statement:
#              - Effect: Allow
#                Action:
#                  - "servicecatalog:ListServiceActionsForProvisioningArtifact"
#                  - "servicecatalog:ExecuteprovisionedProductServiceAction"
#                  - "ssm:DescribeDocument"
#                  - "ssm:GetAutomationExecution"
#                  - "ssm:StartAutomationExecution"
#                  - "ssm:StopAutomationExecution"
#                  - "cloudformation:ListStackResources"
#                  - "ec2:DescribeInstanceStatus"
#                  - "ec2:StartInstances"
#                  - "ec2:StopInstances"
#                Resource: "*"
#              - Effect: Allow
#                Action:
#                  - logs:CreateLogGroup
#                  - logs:CreateLogStream
#                  - logs:PutLogEvents
#                Resource: "*"
Outputs:
  CreateFunctionArn:
    Value: !GetAtt CreateFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CreateFunctionArn'
